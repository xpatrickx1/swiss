"use strict";$(document).ready(function(){var e=function(e,t){jQuery(function(a){var n=function(e,t){function n(e,t){var n=!1;return a.each(t,function(t,a){if(e==a)return n=!0,!1}),n}var c=this,o=[];a.each(t,function(e,t){n(t.type,o)||o.push(t.type)}),a.each(o,function(n,o){e.append("<li class='ui-autocomplete-group'>"+o+"</li>"),a.each(t,function(t,a){a.type==o&&c._renderItemData(e,a)})})};e.length&&(e.autocomplete({minLength:3,appendTo:e.parent().parent(),source:function(e,t){a.ajax({dataType:"json",url:AutocompleteSearch.ajax_url,data:{term:e.term,action:"autocompleteSearch",security:AutocompleteSearch.ajax_nonce},success:function(n){n=a.ui.autocomplete.filter(n,e.term),t(n.slice(0,6))}})},create:function(){a(this).data("uiAutocomplete")._renderMenu=n},open:function(){var e='<li class="ui-menu-item" id="allResults" onClick="showAllSearchResults('.concat(t,');"><a href="#" rel="nofollow">View all results</a></li>');a(".ui-autocomplete").append(e)},select:function(e,t){window.location.href=t.item.link}}).focus(function(){a(this).autocomplete("search")}).data("ui-autocomplete")._renderItem=function(e,t){var n=String(t.value).replace(new RegExp(this.term,"gi"),"<b>$&</b>");return a("<li></li>").data("ui-autocomplete-item",t).append("<a>"+n+"</a>").appendTo(e)})})};$(".search__wrap .search-field").each(function(t){e($(".search__wrap .search-field").eq(t),t)}),$(".search-field").on("keyup",function(){var e=$(this);0===e.val().length?e.addClass("empty"):e.removeClass("empty")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
