"use strict";function _toConsumableArray(r){return _arrayWithoutHoles(r)||_iterableToArray(r)||_unsupportedIterableToArray(r)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,e){if(r){if("string"==typeof r)return _arrayLikeToArray(r,e);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,e):void 0}}function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}function _arrayLikeToArray(r,e){(null==e||e>r.length)&&(e=r.length);for(var t=0,o=Array(e);t<e;t++)o[t]=r[t];return o}$(document).ready(function(){function r(r,e){var t="";_toConsumableArray(document.querySelectorAll("".concat(r," .item"))).reduce(function(r,t,o,n){return o%e==0&&r.push(n.slice(o,o+e)),r},[]).forEach(function(r){var e="";r.forEach(function(r){"undefined"!==r.outerHTML&&(e+=r.outerHTML)}),t+="<div class='items__group'>"+e+"</div>"}),document.querySelector(".program__list").innerHTML=t}var e=function(){$(window).width()<768?r(".program__list",4):r(".program__list",7)};$(window).resize(function(){e()}),e(),$(".program__slider").slick({infinite:!0,speed:300,centerMode:!1,arrows:!1,slidesToScroll:1,prevArrow:'<button class="slick-prev slick-arrow arrow--main" aria-label="Previous" type="button"></button>',nextArrow:'<button class="slick-next slick-arrow arrow--main" aria-label="Next" type="button"></button>',dots:!0,responsive:[{breakpoint:767,settings:{slidesToShow:1}},{breakpoint:9999,settings:"unslick"}]}).on("afterChange",function(r){$(window).scroll()}),$(".courses__slider").slick({infinite:!1,speed:300,centerMode:!1,variableWidth:!0,arrows:!0,slidesToScroll:1,prevArrow:'<button class="slick-prev slick-arrow arrow--main" aria-label="Previous" type="button"></button>',nextArrow:'<button class="slick-next slick-arrow arrow--main" aria-label="Next" type="button"></button>',responsive:[{breakpoint:767,settings:{slidesToShow:1}},{breakpoint:1100,settings:{slidesToShow:2}},{breakpoint:1400,settings:{slidesToShow:3}}]}).on("afterChange",function(r){$(window).scroll()}),$(".recent-post__slider").slick({infinite:!1,speed:300,centerMode:!1,variableWidth:!0,arrows:!0,slidesToScroll:1,prevArrow:'<button class="slick-prev slick-arrow arrow--main" aria-label="Previous" type="button"></button>',nextArrow:'<button class="slick-next slick-arrow arrow--main" aria-label="Next" type="button"></button>',responsive:[{breakpoint:1271,settings:{slidesToShow:1}},{breakpoint:9999,settings:"unslick"}]}).on("afterChange",function(r){$(window).scroll()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
